// utils/generateChunks.cjs
// Script CommonJS para gerar chunks de conhecimento
// Uso: node utils/generateChunks.cjs

const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando gera√ß√£o de chunks...');

// Fun√ß√£o para ler e importar o knowledgeBase dinamicamente
function loadKnowledgeBase() {
    try {
        const knowledgeBasePath = path.join(__dirname, '../data/knowledgeBase.js');
        const content = fs.readFileSync(knowledgeBasePath, 'utf8');
        
        // Extrair apenas o objeto do knowledgeBase
        const match = content.match(/export const knowledgeBase = ({[\s\S]*});/);
        if (!match) {
            throw new Error('N√£o foi poss√≠vel extrair knowledgeBase do arquivo');
        }
        
        // Usar Function constructor para avaliar o objeto de forma segura
        const knowledgeBaseObj = new Function('return ' + match[1])();
        console.log('üìö Knowledge base carregado dinamicamente!');
        return knowledgeBaseObj;
        
    } catch (error) {
        console.error('‚ùå Erro ao carregar knowledge base:', error.message);
        process.exit(1);
    }
}

function generateDetailedChunks(knowledgeBase) {
    const chunks = [];

    // Fun√ß√£o auxiliar para percorrer objetos profundamente
    function extractDetailedInfo(obj, prefix = '') {
        let result = '';
        for (const [key, value] of Object.entries(obj)) {
            if (typeof value === 'object' && value !== null) {
                result += extractDetailedInfo(value, prefix + key + '.');
            } else {
                result += `${prefix}${key}: ${value}\n`;
            }
        }
        return result;
    }

    // 1. INFORMA√á√ïES B√ÅSICAS DO CURSO - COMPLETAS
    chunks.push({
        source: 'informacoes_basicas_completas',
        content: `CURSO COMPLETO: ${knowledgeBase.curso.informacoes_basicas.nome}
INSTITUI√á√ÉO: ${knowledgeBase.curso.informacoes_basicas.instituicao}
P√öBLICO-ALVO: ${knowledgeBase.curso.informacoes_basicas.publico_alvo}
OBJETIVO PRINCIPAL: ${knowledgeBase.curso.informacoes_basicas.objetivo_principal}
ASSISTENTE RESPONS√ÅVEL: ${knowledgeBase.curso.informacoes_basicas.assistente}

Este √© um curso especializado e completo para advogados que querem dominar sucess√µes e invent√°rios, com foco na pr√°tica profissional de alto n√≠vel. O curso transforma a advocacia do aluno para se tornar um profissional de destaque e bem-sucedido nestas √°reas.`
    });

    // 2. DETALHES T√âCNICOS COMPLETOS
    chunks.push({
        source: 'detalhes_tecnicos_completos',
        content: `ESTRUTURA T√âCNICA DO CURSO:
‚Ä¢ CARGA HOR√ÅRIA: ${knowledgeBase.curso.detalhes_tecnicos.carga_horaria}
‚Ä¢ TEMPO PARA CONCLUS√ÉO: ${knowledgeBase.curso.detalhes_tecnicos.tempo_conclusao}
‚Ä¢ FORMATO DAS AULAS: ${knowledgeBase.curso.detalhes_tecnicos.formato}
‚Ä¢ CERTIFICADO: ${knowledgeBase.curso.detalhes_tecnicos.certificado}

O curso √© estruturado de forma pr√°tica e objetiva, permitindo que o aluno comece a aplicar o conhecimento imediatamente ap√≥s assistir as aulas. As aulas s√£o gravadas e podem ser assistidas no ritmo do aluno.`
    });

    // 3. POL√çTICA DE ACESSO - MUITO IMPORTANTE
    chunks.push({
        source: 'politica_acesso_critica',
        content: `‚ö†Ô∏è POL√çTICA DE ACESSO - INFORMA√á√ÉO CR√çTICA:
‚Ä¢ DURA√á√ÉO DO ACESSO: ${knowledgeBase.curso.acesso_e_tempo.duracao_acesso}
‚Ä¢ TIPO DE ACESSO: ${knowledgeBase.curso.acesso_e_tempo.tipo_acesso}
‚Ä¢ EXPIRA√á√ÉO: ${knowledgeBase.curso.acesso_e_tempo.expiracao}
‚Ä¢ RENOVA√á√ÉO: ${knowledgeBase.curso.acesso_e_tempo.renovacao}
‚Ä¢ IMPORT√ÇNCIA: ${knowledgeBase.curso.acesso_e_tempo.importancia}

‚ö†Ô∏è ATEN√á√ÉO: Este √© um ponto cr√≠tico que deve ser sempre destacado. O acesso √© limitado e definitivo. N√£o h√° possibilidade de extens√£o de prazo ap√≥s o vencimento. √â fundamental que o aluno organize seus estudos dentro do per√≠odo de 12 meses.`
    });

    // 4. INVESTIMENTO E FORMAS DE PAGAMENTO
    chunks.push({
        source: 'investimento_completo',
        content: `INVESTIMENTO NO CURSO:
üí∞ VALOR √Ä VISTA: ${knowledgeBase.curso.investimento.valor_vista}
üí≥ VALOR PARCELADO: ${knowledgeBase.curso.investimento.valor_parcelado}
‚òï VALOR DI√ÅRIO: ${knowledgeBase.curso.investimento.valor_diario}
üí≥ FORMAS DE PAGAMENTO ACEITAS: ${knowledgeBase.curso.investimento.formas_pagamento}
üîó LINK DIRETO PARA INSCRI√á√ÉO: ${knowledgeBase.curso.investimento.link_inscricao}

O investimento √© acess√≠vel e justific√°vel pelo valor do conhecimento especializado oferecido. O parcelamento sem juros facilita o acesso ao curso para todos os interessados.`
    });

    // 5. SISTEMA DE SUPORTE COMPLETO
    chunks.push({
        source: 'suporte_completo',
        content: `SISTEMA DE SUPORTE AO ALUNO:
üë®‚Äçüè´ SUPORTE PEDAG√ìGICO: ${knowledgeBase.curso.suporte.pedagogico}
üì± SUPORTE T√âCNICO/ADMINISTRATIVO: ${knowledgeBase.curso.suporte.tecnico_administrativo}
üë• COMUNIDADE DE ALUNOS: ${knowledgeBase.curso.suporte.comunidade}

O sistema de suporte √© completo e garante que o aluno tenha toda a assist√™ncia necess√°ria durante o per√≠odo de acesso ao curso. O suporte pedag√≥gico permite tirar d√∫vidas diretamente com o professor.`
    });

    // 6. FAQ - ACESSO P√ìS-COMPRA
    chunks.push({
        source: 'faq_acesso_pos_compra',
        content: `PERGUNTA FREQUENTE: Como fa√ßo para acessar o curso ap√≥s a compra?
RESPOSTA COMPLETA: ${knowledgeBase.faq.acesso_pos_compra}

Este √© um processo automatizado e simples. O aluno recebe todas as informa√ß√µes necess√°rias por email imediatamente ap√≥s a confirma√ß√£o do pagamento.`
    });

    // 7. FAQ - CERTIFICADO
    chunks.push({
        source: 'faq_certificado',
        content: `PERGUNTA FREQUENTE: O curso possui certificado?
RESPOSTA COMPLETA: ${knowledgeBase.faq.certificado}

O certificado √© gerado automaticamente ap√≥s a conclus√£o de todas as aulas, sem necessidade de solicita√ß√£o manual ou taxas adicionais.`
    });

    // 8. FAQ - TEMPO DE ACESSO (CR√çTICO)
    chunks.push({
        source: 'faq_tempo_acesso_critico',
        content: `PERGUNTA FREQUENTE: Por quanto tempo terei acesso ao curso?
RESPOSTA CR√çTICA: ${knowledgeBase.faq.tempo_acesso}

Esta √© uma informa√ß√£o FUNDAMENTAL que deve ser sempre destacada. O acesso limitado √© uma pol√≠tica definida e n√£o h√° exce√ß√µes.`
    });

    // 9. FAQ - GARANTIA DE SATISFA√á√ÉO
    chunks.push({
        source: 'faq_garantia_satisfacao',
        content: `PERGUNTA FREQUENTE: Existe garantia de satisfa√ß√£o?
RESPOSTA COMPLETA: ${knowledgeBase.faq.garantia_satisfacao}

A garantia √© processada automaticamente pela Hotmart, plataforma de ensino reconhecida e confi√°vel no mercado.`
    });

    // 10. FAQ ADICIONAL - CARGA HOR√ÅRIA
    chunks.push({
        source: 'faq_carga_horaria',
        content: `PERGUNTA FREQUENTE: Qual √© a carga hor√°ria do curso?
RESPOSTA COMPLETA: ${knowledgeBase.faq.carga_horaria}`
    });

    // 11. FAQ ADICIONAL - FORMATO DO CURSO
    chunks.push({
        source: 'faq_formato_curso',
        content: `PERGUNTA FREQUENTE: Qual √© o formato do curso?
RESPOSTA COMPLETA: ${knowledgeBase.faq.formato_curso}`
    });

    // 12. FAQ ADICIONAL - D√öVIDAS E SUPORTE
    chunks.push({
        source: 'faq_duvidas_suporte',
        content: `PERGUNTA FREQUENTE: Como funcionam as d√∫vidas e suporte?
RESPOSTA COMPLETA: ${knowledgeBase.faq.duvidas_suporte}`
    });

    // 13. FAQ CR√çTICO - P√ìS 12 MESES
    chunks.push({
        source: 'faq_pos_12_meses_critico',
        content: `PERGUNTA FREQUENTE: O que acontece ap√≥s os 12 meses?
RESPOSTA CR√çTICA: ${knowledgeBase.faq.pos_12_meses}`
    });

    // 14. FAQ - VS P√ìS-GRADUA√á√ÉO
    chunks.push({
        source: 'faq_vs_pos_graduacao',
        content: `PERGUNTA FREQUENTE: Como este curso se compara a uma p√≥s-gradua√ß√£o?
RESPOSTA COMPLETA: ${knowledgeBase.faq.vs_pos_graduacao}`
    });

    // 15. FAQ - URG√äNCIA DE ESPECIALIZA√á√ÉO
    chunks.push({
        source: 'faq_urgencia_especializacao',
        content: `CONTEXTO IMPORTANTE: Por que √© urgente se especializar?
RESPOSTA: ${knowledgeBase.faq.urgencia_especializacao}`
    });

    // 16. FAQ - QUEM √â O PROFESSOR
    if (knowledgeBase.faq.quem_e_o_professor) {
        chunks.push({
            source: 'faq_quem_e_o_professor',
            content: `PERGUNTA FREQUENTE: ${knowledgeBase.faq.quem_e_o_professor.pergunta}
RESPOSTA COMPLETA: ${knowledgeBase.faq.quem_e_o_professor.resposta}

Esta √© uma resposta direta sobre a identidade e experi√™ncia do professor do curso, incluindo seu nome e credenciais.`
        });
    }

    // 17. PROFESSOR - CREDENCIAIS COMPLETAS
    chunks.push({
        source: 'professor_credenciais_completas',
        content: `SOBRE O PROFESSOR:
üë®‚Äç‚öñÔ∏è EXPERI√äNCIA NA ADVOCACIA: ${knowledgeBase.professor.experiencia_advocacia}
üë®‚Äç‚öñÔ∏è EXPERI√äNCIA NA MAGISTRATURA: ${knowledgeBase.professor.experiencia_magistratura}
üéØ DECIS√ÉO DE CARREIRA: ${knowledgeBase.professor.decisao_carreira}
üéì FOCO NO ENSINO: ${knowledgeBase.professor.foco_ensino}
üìö METODOLOGIA DE ENSINO: ${knowledgeBase.professor.metodologia}

O professor possui experi√™ncia √∫nica tanto na advocacia quanto na magistratura, garantindo uma vis√£o completa e pr√°tica do direito de fam√≠lia e sucess√µes. Sua dupla experi√™ncia permite ensinar tanto a perspectiva do advogado quanto do magistrado, transformando teoria em pr√°tica aplic√°vel e rent√°vel.`
    });

    // 18. CONTE√öDO PROGRAM√ÅTICO - M√ìDULOS PRINCIPAIS
    chunks.push({
        source: 'conteudo_programatico_modulos',
        content: `CONTE√öDO PROGRAM√ÅTICO COMPLETO - M√ìDULOS PRINCIPAIS:
${knowledgeBase.conteudo_programatico.modulos_principais.map((modulo, index) => `${index + 1}. ${modulo}`).join('\n')}

√ÅREAS COBERTAS: ${knowledgeBase.conteudo_programatico.areas_cobertas}

Este √© o conte√∫do mais completo e estruturado dispon√≠vel no mercado para advogados que querem dominar totalmente o direito de fam√≠lia e sucess√µes.`
    });

    // 19. B√îNUS E MATERIAIS EXTRAS (SEM MEN√á√ÉO √ÄS IAs)
    chunks.push({
        source: 'bonus_materiais_completos',
        content: `MATERIAIS B√îNUS INCLUSOS:

üéÅ COMBO ADVOCACIA 4.0:
${knowledgeBase.bonus_materiais.combo_advocacia_4_0.map(item => `‚Ä¢ ${item}`).join('\n')}

üéÅ COMBO SEGREDOS DA PROSPEC√á√ÉO:
${knowledgeBase.bonus_materiais.combo_segredos_prospeccao.map(item => `‚Ä¢ ${item}`).join('\n')}

üéÅ OUTROS B√îNUS:
${knowledgeBase.bonus_materiais.outros_bonus.filter(item => !item.includes('IAJUR') && !item.includes('Mar.IA')).map(item => `‚Ä¢ ${item}`).join('\n')}

S√£o mais de 15 b√¥nus extras inclusos no curso, aumentando drasticamente o valor do investimento.`
    });

    // 19.1. B√îNUS ESPEC√çFICO - IAJUR
    chunks.push({
        source: 'bonus_iajur_especifico',
        content: `üéÅ B√îNUS EXCLUSIVO - IAJUR:

‚Ä¢ IAJUR - Intelig√™ncia Artificial para elabora√ß√£o de peti√ß√µes de invent√°rios

Esta √© uma ferramenta revolucion√°ria inclu√≠da como b√¥nus do curso, desenvolvida especificamente para automatizar a elabora√ß√£o de documentos jur√≠dicos na √°rea sucess√≥ria.

PALAVRAS-CHAVE: IAJUR, b√¥nus, intelig√™ncia artificial, peti√ß√µes, invent√°rios, ferramenta jur√≠dica`
    });

    // 19.2. B√îNUS ESPEC√çFICO - MAR.IA
    chunks.push({
        source: 'bonus_maria_especifico',
        content: `üéÅ B√îNUS EXCLUSIVO - MAR.IA:

‚Ä¢ Mar.IA - Intelig√™ncia Artificial para tirar d√∫vidas espec√≠ficas de cada aula 24/7

Esta √© uma assistente virtual educacional inclu√≠da como b√¥nus do curso, dispon√≠vel 24 horas por dia para esclarecer d√∫vidas sobre o conte√∫do das aulas.

PALAVRAS-CHAVE: Mar.IA, maria, b√¥nus, assistente virtual, d√∫vidas, suporte educacional, 24/7`
    });

    // 19.1. INTELIG√äNCIAS ARTIFICIAIS - IAJUR (ESPEC√çFICO)
    if (knowledgeBase.inteligencias_artificiais && knowledgeBase.inteligencias_artificiais.iajur) {
        chunks.push({
            source: 'inteligencias_artificiais_iajur',
            content: `ü§ñ IAJUR - INTELIG√äNCIA ARTIFICIAL JUR√çDICA:

üìã NOME: ${knowledgeBase.inteligencias_artificiais.iajur.nome}
üìù DESCRI√á√ÉO: ${knowledgeBase.inteligencias_artificiais.iajur.descricao}

üéØ FUNCIONALIDADES:
${knowledgeBase.inteligencias_artificiais.iajur.funcionalidades.map(func => `‚Ä¢ ${func}`).join('\n')}

‚≠ê DIFERENCIAL: ${knowledgeBase.inteligencias_artificiais.iajur.diferencial}

üîë ACESSO: ${knowledgeBase.inteligencias_artificiais.iajur.acesso}
üéØ OBJETIVO: ${knowledgeBase.inteligencias_artificiais.iajur.objetivo}
‚ö° ECONOMIA DE TEMPO: ${knowledgeBase.inteligencias_artificiais.iajur.economia_tempo}
üèÜ VANTAGEM COMPETITIVA: ${knowledgeBase.inteligencias_artificiais.iajur.vantagem_competitiva}

A IAJUR √© uma ferramenta especializada para automatizar e agilizar a elabora√ß√£o de peti√ß√µes e documentos jur√≠dicos, especialmente na √°rea de invent√°rios e sucess√µes.

PALAVRAS-CHAVE: IAJUR, IA JUR, inteligencia artificial juridica, peti√ß√µes, invent√°rio, documentos jur√≠dicos, automatiza√ß√£o`
        });
    }

    // 19.2. INTELIG√äNCIAS ARTIFICIAIS - MAR.IA (ESPEC√çFICO)
    if (knowledgeBase.inteligencias_artificiais && knowledgeBase.inteligencias_artificiais.maria) {
        chunks.push({
            source: 'inteligencias_artificiais_maria',
            content: `ü§ñ MAR.IA - ASSISTENTE VIRTUAL EDUCACIONAL:

üìã NOME: ${knowledgeBase.inteligencias_artificiais.maria.nome}
üìù DESCRI√á√ÉO: ${knowledgeBase.inteligencias_artificiais.maria.descricao}

üéØ FUNCIONALIDADES:
${knowledgeBase.inteligencias_artificiais.maria.funcionalidades.map(func => `‚Ä¢ ${func}`).join('\n')}

‚≠ê DIFERENCIAL: ${knowledgeBase.inteligencias_artificiais.maria.diferencial}

üîë ACESSO: ${knowledgeBase.inteligencias_artificiais.maria.acesso}
üéØ OBJETIVO: ${knowledgeBase.inteligencias_artificiais.maria.objetivo}
‚è∞ DISPONIBILIDADE: ${knowledgeBase.inteligencias_artificiais.maria.disponibilidade}
üí° CONTEXTO DE USO: ${knowledgeBase.inteligencias_artificiais.maria.contexto_uso}

A Mar.IA √© seu assistente pessoal 24/7 para tirar d√∫vidas espec√≠ficas sobre cada aula do curso, proporcionando suporte educacional cont√≠nuo.

PALAVRAS-CHAVE: Mar.IA, maria, assistente virtual, d√∫vidas, aulas, suporte educacional, 24/7`
        });
    }

    // 19.3. INTELIG√äNCIAS ARTIFICIAIS - DIFEREN√áA PRINCIPAL
    if (knowledgeBase.inteligencias_artificiais && knowledgeBase.inteligencias_artificiais.diferenca_principal) {
        chunks.push({
            source: 'inteligencias_artificiais_diferenca',
            content: `üîç DIFEREN√áA ENTRE AS INTELIG√äNCIAS ARTIFICIAIS:

üìä DIFEREN√áA PRINCIPAL: ${knowledgeBase.inteligencias_artificiais.diferenca_principal}

üíé VALOR AGREGADO: ${knowledgeBase.inteligencias_artificiais.valor_agregado}

Cada IA tem sua fun√ß√£o espec√≠fica: a IAJUR foca na pr√°tica jur√≠dica (elabora√ß√£o de documentos), enquanto a Mar.IA foca no suporte educacional (esclarecimento de d√∫vidas do curso).`
        });
    }

    // 19.4. INTELIG√äNCIAS ARTIFICIAIS - ACESSO GERAL
    if (knowledgeBase.inteligencias_artificiais) {
        chunks.push({
            source: 'inteligencias_artificiais_acesso',
            content: `üîë ACESSO √ÄS INTELIG√äNCIAS ARTIFICIAIS:

ü§ñ IAJUR: ${knowledgeBase.inteligencias_artificiais.iajur ? knowledgeBase.inteligencias_artificiais.iajur.acesso : 'Inclu√≠da como b√¥nus do curso'}
ü§ñ MAR.IA: ${knowledgeBase.inteligencias_artificiais.maria ? knowledgeBase.inteligencias_artificiais.maria.acesso : 'Inclu√≠da como b√¥nus do curso'}

Ambas as intelig√™ncias artificiais s√£o b√¥nus exclusivos inclusos no curso, proporcionando ferramentas avan√ßadas para otimizar tanto o aprendizado quanto a pr√°tica profissional.`
        });
    }

    // 20. PROVAS SOCIAIS - DEPOIMENTOS EM V√çDEO
    if (knowledgeBase.provas_sociais) {
        chunks.push({
            source: 'provas_sociais_depoimentos_video',
            content: `DEPOIMENTOS REAIS DE ALUNOS - PROVAS SOCIAIS:

üé• ALUNA MARIANA:
‚Ä¢ Nome: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_mariana.nome}
‚Ä¢ Status: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_mariana.status}
‚Ä¢ Link do depoimento: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_mariana.link_youtube}
‚Ä¢ Resumo: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_mariana.resumo_depoimento}

üé• ALUNA CRISTIANE COSTA:
‚Ä¢ Nome: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_cristiane.nome}
‚Ä¢ Status: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_cristiane.status}
‚Ä¢ Link do depoimento: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_cristiane.link_youtube}
‚Ä¢ Resumo: ${knowledgeBase.provas_sociais.depoimentos_video.aluna_cristiane.resumo_depoimento}
‚Ä¢ Cita√ß√£o destaque: "${knowledgeBase.provas_sociais.depoimentos_video.aluna_cristiane.citacao_destaque}"

üé• ALUNO ERNANDES:
‚Ä¢ Nome: ${knowledgeBase.provas_sociais.depoimentos_video.aluno_ernandes.nome}
‚Ä¢ Status: ${knowledgeBase.provas_sociais.depoimentos_video.aluno_ernandes.status}
‚Ä¢ Link do depoimento: ${knowledgeBase.provas_sociais.depoimentos_video.aluno_ernandes.link_youtube}
‚Ä¢ Resumo: ${knowledgeBase.provas_sociais.depoimentos_video.aluno_ernandes.resumo_depoimento}

Estes s√£o depoimentos reais e verific√°veis de alunos que obtiveram resultados excepcionais com o curso.`
        });

        chunks.push({
            source: 'provas_sociais_todos_os_links',
            content: `LINKS COMPLETOS DOS DEPOIMENTOS:

${knowledgeBase.provas_sociais.todos_os_links.links_completos}

INSTRU√á√ïES DE USO: ${knowledgeBase.provas_sociais.todos_os_links.instrucoes_uso}

Use estes links quando o lead solicitar especificamente para ver depoimentos, provas sociais, resultados de outros alunos ou casos de sucesso. S√£o provas reais e concretas do valor do curso.`
        });
    }

    // 21. NOVO CHUNK - MAIS PROVAS SOCIAIS (P√ÅGINA DE VENDAS)
    if (knowledgeBase.provas_sociais && knowledgeBase.provas_sociais.mais_provas) {
        chunks.push({
            source: 'provas_sociais_mais_provas_redes_sociais',
            content: `INSTRU√á√ÉO: ${knowledgeBase.provas_sociais.mais_provas.instrucao}
RESPOSTA SUGERIDA: ${knowledgeBase.provas_sociais.mais_provas.resposta_sugerida}

Use este chunk especificamente quando o lead pedir por MAIS provas sociais ou outros depoimentos al√©m dos principais.`
        });
    }

    // 21.1. NOVO CHUNK - ESPECIFICA√á√ïES DO CURSO (P√ÅGINA DE VENDAS)
    if (knowledgeBase.provas_sociais && knowledgeBase.provas_sociais.especificacoes_curso) {
        chunks.push({
            source: 'especificacoes_curso_pagina_vendas',
            content: `INSTRU√á√ÉO: ${knowledgeBase.provas_sociais.especificacoes_curso.instrucao}
RESPOSTA SUGERIDA: Perfeito, {contactName}! Voc√™ pode acessar nossa p√°gina de vendas: https://direitoprocessualaplicado.com.br/pos-graduacao-direito-sucessorio/ 

L√° voc√™ encontrar√° todas as especifica√ß√µes detalhadas do curso, o programa completo, os m√≥dulos, b√¥nus e muito mais informa√ß√µes sobre tudo que est√° inclu√≠do, incluindo detalhes da p√≥s-gradua√ß√£o dispon√≠vel para alunos.

Use este chunk especificamente quando o lead pedir especifica√ß√µes, detalhes ou programa do curso.`
        });
    }

    // 22. POL√çTICAS IMPORTANTES
    chunks.push({
        source: 'politicas_curso_importantes',
        content: `POL√çTICAS IMPORTANTES DO CURSO:

‚ö†Ô∏è ACESSO CR√çTICO: ${knowledgeBase.politicas.acesso_critico}

üîí EXCLUSIVIDADE: ${knowledgeBase.politicas.exclusividade}

‚úÖ GARANTIA DE SATISFA√á√ÉO:
‚Ä¢ ${knowledgeBase.politicas.garantia_satisfacao.descricao}
‚Ä¢ ${knowledgeBase.politicas.garantia_satisfacao.processamento}
‚Ä¢ PIX: ${knowledgeBase.politicas.garantia_satisfacao.pix_reembolso} ${knowledgeBase.politicas.garantia_satisfacao.prazo_deposito}
‚Ä¢ CART√ÉO: ${knowledgeBase.politicas.garantia_satisfacao.cartao_credito}

Estas pol√≠ticas garantem transpar√™ncia total e seguran√ßa para o aluno.`
    });

    // 23. RESPOSTAS ESTRAT√âGICAS PARA OBJE√á√ïES
    if (knowledgeBase.respostas_a_objecoes) {
        const respostasObjecoes = Object.entries(knowledgeBase.respostas_a_objecoes);
        respostasObjecoes.forEach(([key, value]) => {
            chunks.push({
                source: `resposta_objecao_${key}`,
                content: `OBJEC√ÉO COMUM: ${key.replace(/_/g, ' ')}
SITUA√á√ÉO IDENTIFICADA: ${value.situacao}
RESPOSTA ESTRAT√âGICA: ${value.resposta}
PALAVRAS-CHAVE PARA DETEC√á√ÉO: ${value.palavras_chave}

Esta √© uma resposta estruturada para uma obje√ß√£o comum. Use-a para resolver a preocupa√ß√£o do lead de forma emp√°tica e eficaz.`
            });
        });
    }

    // 24. ARGUMENTOS DE VENDAS DETALHADOS
    const argumentos = Object.entries(knowledgeBase.argumentos_vendas);
    argumentos.forEach(([key, value], index) => {
        chunks.push({
            source: `argumento_vendas_${key}`,
            content: `ARGUMENTO DE VENDAS ${index + 1} - ${key.toUpperCase()}:
${value}

Este argumento deve ser usado estrategicamente para destacar o valor √∫nico do curso e motivar a a√ß√£o do interessado.`
        });
    });

    // 25. PERSONA DO AGENTE
    chunks.push({
        source: 'persona_agente_vendas',
        content: `ORIENTA√á√ïES PARA O AGENTE DE VENDAS:

üéØ TOM DE VOZ: ${knowledgeBase.persona_agente.tom_voz}
ü§ù ABORDAGEM: ${knowledgeBase.persona_agente.abordagem}
üí° FOCO: ${knowledgeBase.persona_agente.foco}
üí¨ COMUNICA√á√ÉO: ${knowledgeBase.persona_agente.comunicacao}
üëë AUTORIDADE: ${knowledgeBase.persona_agente.autoridade}
‚è∞ URG√äNCIA/ESCASSEZ: ${knowledgeBase.persona_agente.urgencia_escassez}

Estas diretrizes garantem uma abordagem consistente e eficaz em todas as intera√ß√µes com prospects.`
    });

    // 26. CONTEXTO GERAL DO CURSO - RESUMO EXECUTIVO
    chunks.push({
        source: 'contexto_geral_curso',
        content: `RESUMO EXECUTIVO DO CURSO:
O ${knowledgeBase.curso.informacoes_basicas.nome} √© um programa de especializa√ß√£o completo oferecido pela ${knowledgeBase.curso.informacoes_basicas.instituicao}, com ${knowledgeBase.curso.detalhes_tecnicos.carga_horaria} de conte√∫do pr√°tico e direto. 

P√öBLICO-ALVO: ${knowledgeBase.curso.informacoes_basicas.publico_alvo}
DIFERENCIAL: Curso completo que abrange sucess√µes e invent√°rios, diferente de cursos espec√≠ficos do mercado
URG√äNCIA: √önica turma do ano, com foco na qualidade
INVESTIMENTO: A partir de ${knowledgeBase.curso.investimento.valor_diario} por dia
ACESSO: ${knowledgeBase.curso.acesso_e_tempo.duracao_acesso} (limitado)

Este √© o contexto geral que deve ser usado quando o lead faz perguntas amplas sobre o curso.`
    });

    // 27. DIRETRIZES ESTRUTURADAS - RESPOSTAS PADRONIZADAS
    if (knowledgeBase.diretrizes_estruturadas) {
        const respostasPadronizadas = Object.entries(knowledgeBase.diretrizes_estruturadas.respostas_padronizadas);
        respostasPadronizadas.forEach(([key, value]) => {
            chunks.push({
                source: `diretriz_resposta_${key}`,
                content: `RESPOSTA PADRONIZADA - ${key.toUpperCase()}:
PERGUNTA: ${value.pergunta || value.informacao || 'Informa√ß√£o t√©cnica'}
RESPOSTA: ${value.resposta}

PALAVRAS-CHAVE: ${value.palavras_chave}

Esta √© uma resposta estruturada e padronizada que deve ser usada quando o lead fizer perguntas relacionadas a este t√≥pico espec√≠fico.`
            });
        });

        // 28. FRASES HUMANIZADAS
        chunks.push({
            source: 'diretrizes_frases_humanizadas',
            content: `FRASES HUMANIZADAS PARA USO ESTRAT√âGICO:

INTERESSE INICIAL: ${knowledgeBase.diretrizes_estruturadas.frases_humanizadas.interesse_inicial}

QUEBRA DE OBJE√á√ÉO: ${knowledgeBase.diretrizes_estruturadas.frases_humanizadas.quebra_objecao}

PALAVRAS-CHAVE: ${knowledgeBase.diretrizes_estruturadas.frases_humanizadas.palavras_chave}

Use essas frases humanizadas nos momentos apropriados da conversa para criar conex√£o emocional com o lead.`
        });

        // 29. OBJE√á√ïES ESPEC√çFICAS (INCLUINDO 30 DIAS EXTRAS)
        if (knowledgeBase.diretrizes_estruturadas.objecoes_especificas) {
            const objecoesEspecificas = Object.entries(knowledgeBase.diretrizes_estruturadas.objecoes_especificas);
            objecoesEspecificas.forEach(([key, value]) => {
                chunks.push({
                    source: `resposta_objecao_${key}`,
                    content: `OBJEC√ÉO ESPEC√çFICA: ${key.replace(/_/g, ' ')}
SITUA√á√ÉO IDENTIFICADA: ${value.situacao}
RESPOSTA ESTRAT√âGICA: ${value.resposta}
PALAVRAS-CHAVE PARA DETEC√á√ÉO: ${value.palavras_chave}

Esta √© uma resposta estruturada para uma obje√ß√£o espec√≠fica. Use-a para resolver a preocupa√ß√£o do lead de forma emp√°tica e eficaz.`
                });
            });
        }

        // 30. SITUA√á√ïES ESPECIAIS
        const situacoesEspeciais = Object.entries(knowledgeBase.diretrizes_estruturadas.situacoes_especiais);
        situacoesEspeciais.forEach(([key, value]) => {
            chunks.push({
                source: `diretriz_situacao_${key}`,
                content: `SITUA√á√ÉO ESPECIAL - ${key.toUpperCase()}:
CONTEXTO: ${value.situacao}
RESPOSTA RECOMENDADA: ${value.resposta}

PALAVRAS-CHAVE: ${value.palavras_chave}

Esta √© uma situa√ß√£o que requer abordagem espec√≠fica e cuidadosa.`
            });
        });
    }

    // 31. DETEC√á√ÉO DE SITUA√á√ïES EMOCIONAIS
    if (knowledgeBase.deteccao_situacoes_emocionais) {
        chunks.push({
            source: 'deteccao_problemas_emocionais',
            content: `DETEC√á√ÉO DE SITUA√á√ïES EMOCIONAIS DIF√çCEIS:

INDICADORES FINANCEIROS: ${knowledgeBase.deteccao_situacoes_emocionais.indicadores_problemas.financeiros.join(', ')}

INDICADORES DE SA√öDE: ${knowledgeBase.deteccao_situacoes_emocionais.indicadores_problemas.saude.join(', ')}

INDICADORES PESSOAIS: ${knowledgeBase.deteccao_situacoes_emocionais.indicadores_problemas.pessoais.join(', ')}

INDICADORES PROFISSIONAIS: ${knowledgeBase.deteccao_situacoes_emocionais.indicadores_problemas.profissionais.join(', ')}

ESTRUTURA DA RESPOSTA EMP√ÅTICA: ${knowledgeBase.deteccao_situacoes_emocionais.resposta_empatica.estrutura}

ELEMENTOS OBRIGAT√ìRIOS: ${knowledgeBase.deteccao_situacoes_emocionais.resposta_empatica.elementos_obrigatorios.join(', ')}

TOM: ${knowledgeBase.deteccao_situacoes_emocionais.resposta_empatica.tom}

PALAVRAS-CHAVE: ${knowledgeBase.deteccao_situacoes_emocionais.resposta_empatica.palavras_chave}

ATEN√á√ÉO: Quando detectar qualquer um desses indicadores, priorize o bem-estar da pessoa, demonstre empatia genu√≠na e N√ÉO insista na venda.`
        });
    }

    return chunks;
}

// EXECU√á√ÉO PRINCIPAL
try {
    console.log('üìö Carregando knowledge base...');
    const knowledgeBase = loadKnowledgeBase();
    
    console.log('üîÑ Gerando chunks detalhados...');
    const chunks = generateDetailedChunks(knowledgeBase);
    console.log(`‚ú® Gerados ${chunks.length} chunks ricos em conte√∫do!`);
    
    // Gerar conte√∫do do arquivo
    const fileContent = `// data/processedKnowledge.js
// ‚ö†Ô∏è  ARQUIVO GERADO AUTOMATICAMENTE - N√ÉO EDITE MANUALMENTE! ‚ö†Ô∏è
// Para atualizar, edite data/knowledgeBase.js e execute: node utils/generateChunks.cjs
// Gerado em: ${new Date().toLocaleString('pt-BR')}

export const processedKnowledge = ${JSON.stringify(chunks, null, 2)};
`;
    
    // Salvar arquivo
    const outputPath = path.join(__dirname, '../data/processedKnowledge.js');
    fs.writeFileSync(outputPath, fileContent, 'utf8');
    
    console.log('‚úÖ Arquivo atualizado com sucesso!');
    console.log(`üìä Total de chunks: ${chunks.length}`);
    console.log(`üìÅ Salvo em: ${outputPath}`);
    
    // Preview detalhado
    console.log('\nüìã Preview dos chunks gerados:');
    chunks.slice(0, 5).forEach((chunk, index) => {
        console.log(`${index + 1}. [${chunk.source}] ${chunk.content.substring(0, 100)}...`);
    });
    
    // Estat√≠sticas
    const totalChars = chunks.reduce((sum, chunk) => sum + chunk.content.length, 0);
    const avgCharsPerChunk = Math.round(totalChars / chunks.length);
    
    console.log(`\nüìà Estat√≠sticas:`);
    console.log(`‚Ä¢ Total de caracteres: ${totalChars.toLocaleString('pt-BR')}`);
    console.log(`‚Ä¢ M√©dia por chunk: ${avgCharsPerChunk} caracteres`);
    console.log(`‚Ä¢ Chunks com mais de 500 chars: ${chunks.filter(c => c.content.length > 500).length}`);
    
    console.log('\nüéâ Processo conclu√≠do! Knowledge base com contexto rico gerado com sucesso!');
    
} catch (error) {
    console.error('‚ùå Erro:', error.message);
    process.exit(1);
}